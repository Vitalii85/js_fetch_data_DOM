{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","phonesWithDetails","phonesWithoutDetails","phonesDetails","getPhones","fetch","then","response","ok","setTimeout","alert","status","json","phonesList","list","document","createElement","phone","phoneName","innerText","name","append","body","getPhonesDetails","phonesId","requests","map","id","Promise","all","responses","catch","Error","push","JSON","parse","stringify","details","i","length","Object","assign"],"mappings":"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","file":"main.b3cc80cb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst phonesWithDetails = [];\nconst phonesWithoutDetails = [];\nconst phonesDetails = [];\n\nconst getPhones = () => {\n  return fetch(`${BASE_URL}/phones.json`)\n    .then(response => {\n      if (!response.ok) {\n        throw setTimeout(() => {\n          alert(`${response.status}`);\n        }, 5000);\n      }\n\n      return response.json();\n    })\n    .then(phonesList => {\n      const list = document.createElement('ul');\n\n      for (const phone of phonesList) {\n        const phoneName = document.createElement('li');\n\n        phoneName.innerText = phone.name;\n        list.append(phoneName);\n      }\n\n      document.body.append(list);\n\n      return phonesList;\n    });\n};\n\nconst getPhonesDetails = (phonesId) => {\n  const requests = phonesId.map(id => fetch(`${BASE_URL}/phones/${id}.json`));\n\n  return Promise.all(requests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .catch(() => {\n      throw alert(Error('Error on load details'));\n    });\n};\n\ngetPhones()\n  .then(phonesList => {\n    for (const phone of phonesList) {\n      phonesWithoutDetails.push(JSON.parse(JSON.stringify(phone)));\n    }\n\n    return phonesWithoutDetails;\n  })\n  .then(phonesList => getPhonesDetails(phonesList.map(phone => phone.id)))\n  .then(details => {\n    for (const phone of details) {\n      phonesDetails.push(JSON.parse(JSON.stringify(phone)));\n    }\n\n    return phonesDetails;\n  })\n  .then(details => {\n    for (let i = 0; i < details.length; i++) {\n      phonesWithDetails.push(\n        Object.assign(\n          {},\n          JSON.parse(JSON.stringify(phonesWithoutDetails[i])),\n          JSON.parse(JSON.stringify(phonesDetails[i]))\n        )\n      );\n    }\n  })\n  .catch(() => {});\n"]}